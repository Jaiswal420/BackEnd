package com.example.Register_Login;

import jakarta.persistence.EntityManagerFactory;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.domain.EntityScan;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.orm.jpa.JpaTransactionManager;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Configuration
@EnableTransactionManagement
@EnableJpaRepositories(
    basePackages = "com.example.repository.influencer", // your package for influencerdb repos
    entityManagerFactoryRef = "primaryEntityManagerFactory",
    transactionManagerRef = "primaryTransactionManager"
    )

public class PrimaryDataSourceConfig {
    	
    	@Primary
        @Bean(name = "primaryDataSource")
        @ConfigurationProperties(prefix = "spring.datasource.primary")
        public DataSource primaryDataSource() {
            return DataSourceBuilder.create().build();

}
    	
    	 @Primary
    	    @Bean(name = "primaryEntityManagerFactory")
    	    public LocalContainerEntityManagerFactoryBean primaryEntityManagerFactory(
    	            EntityManagerFactoryBuilder builder,
    	            @Qualifier("primaryDataSource") DataSource dataSource) {
    	        return builder
    	                .dataSource(dataSource)
    	                .packages("com.example.model.influencer") // your entity package
    	                .persistenceUnit("primary")
    	                .build();
    	    }

    	    @Primary
    	    @Bean(name = "primaryTransactionManager")
    	    public PlatformTransactionManager primaryTransactionManager(
    	            @Qualifier("primaryEntityManagerFactory") EntityManagerFactory entityManagerFactory) {
    	        return new JpaTransactionManager(entityManagerFactory);
    	    }
    	}
